#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SamsonSchoolSuppliers
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Samson School Suppliers")]
	public partial class SamsonSchoolSuppDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertSchool_tbl(School_tbl instance);
    partial void UpdateSchool_tbl(School_tbl instance);
    partial void DeleteSchool_tbl(School_tbl instance);
    partial void InsertUser_tbl(User_tbl instance);
    partial void UpdateUser_tbl(User_tbl instance);
    partial void DeleteUser_tbl(User_tbl instance);
    partial void InsertItem_tbl(Item_tbl instance);
    partial void UpdateItem_tbl(Item_tbl instance);
    partial void DeleteItem_tbl(Item_tbl instance);
    partial void InsertItem_Assign(Item_Assign instance);
    partial void UpdateItem_Assign(Item_Assign instance);
    partial void DeleteItem_Assign(Item_Assign instance);
    #endregion
		
		public SamsonSchoolSuppDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["Samson_School_SuppliersConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public SamsonSchoolSuppDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SamsonSchoolSuppDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SamsonSchoolSuppDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SamsonSchoolSuppDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<School_tbl> School_tbls
		{
			get
			{
				return this.GetTable<School_tbl>();
			}
		}
		
		public System.Data.Linq.Table<User_tbl> User_tbls
		{
			get
			{
				return this.GetTable<User_tbl>();
			}
		}
		
		public System.Data.Linq.Table<Item_tbl> Item_tbls
		{
			get
			{
				return this.GetTable<Item_tbl>();
			}
		}
		
		public System.Data.Linq.Table<Item_Assign> Item_Assigns
		{
			get
			{
				return this.GetTable<Item_Assign>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.School_tbl")]
	public partial class School_tbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _School_ID;
		
		private string _S_Name;
		
		private string _S_Address;
		
		private string _Cell_Number;
		
		private EntitySet<Item_Assign> _Item_Assigns;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSchool_IDChanging(int value);
    partial void OnSchool_IDChanged();
    partial void OnS_NameChanging(string value);
    partial void OnS_NameChanged();
    partial void OnS_AddressChanging(string value);
    partial void OnS_AddressChanged();
    partial void OnCell_NumberChanging(string value);
    partial void OnCell_NumberChanged();
    #endregion
		
		public School_tbl()
		{
			this._Item_Assigns = new EntitySet<Item_Assign>(new Action<Item_Assign>(this.attach_Item_Assigns), new Action<Item_Assign>(this.detach_Item_Assigns));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_School_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int School_ID
		{
			get
			{
				return this._School_ID;
			}
			set
			{
				if ((this._School_ID != value))
				{
					this.OnSchool_IDChanging(value);
					this.SendPropertyChanging();
					this._School_ID = value;
					this.SendPropertyChanged("School_ID");
					this.OnSchool_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_S_Name", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string S_Name
		{
			get
			{
				return this._S_Name;
			}
			set
			{
				if ((this._S_Name != value))
				{
					this.OnS_NameChanging(value);
					this.SendPropertyChanging();
					this._S_Name = value;
					this.SendPropertyChanged("S_Name");
					this.OnS_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_S_Address", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string S_Address
		{
			get
			{
				return this._S_Address;
			}
			set
			{
				if ((this._S_Address != value))
				{
					this.OnS_AddressChanging(value);
					this.SendPropertyChanging();
					this._S_Address = value;
					this.SendPropertyChanged("S_Address");
					this.OnS_AddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cell_Number", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Cell_Number
		{
			get
			{
				return this._Cell_Number;
			}
			set
			{
				if ((this._Cell_Number != value))
				{
					this.OnCell_NumberChanging(value);
					this.SendPropertyChanging();
					this._Cell_Number = value;
					this.SendPropertyChanged("Cell_Number");
					this.OnCell_NumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_tbl_Item_Assign", Storage="_Item_Assigns", ThisKey="School_ID", OtherKey="School_ID")]
		public EntitySet<Item_Assign> Item_Assigns
		{
			get
			{
				return this._Item_Assigns;
			}
			set
			{
				this._Item_Assigns.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Item_Assigns(Item_Assign entity)
		{
			this.SendPropertyChanging();
			entity.School_tbl = this;
		}
		
		private void detach_Item_Assigns(Item_Assign entity)
		{
			this.SendPropertyChanging();
			entity.School_tbl = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.User_tbl")]
	public partial class User_tbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _User_ID;
		
		private string _U_Name;
		
		private string _Surname;
		
		private string _Email;
		
		private string _User_Type;
		
		private string _Password;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUser_IDChanging(int value);
    partial void OnUser_IDChanged();
    partial void OnU_NameChanging(string value);
    partial void OnU_NameChanged();
    partial void OnSurnameChanging(string value);
    partial void OnSurnameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnUser_TypeChanging(string value);
    partial void OnUser_TypeChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    #endregion
		
		public User_tbl()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int User_ID
		{
			get
			{
				return this._User_ID;
			}
			set
			{
				if ((this._User_ID != value))
				{
					this.OnUser_IDChanging(value);
					this.SendPropertyChanging();
					this._User_ID = value;
					this.SendPropertyChanged("User_ID");
					this.OnUser_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_U_Name", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string U_Name
		{
			get
			{
				return this._U_Name;
			}
			set
			{
				if ((this._U_Name != value))
				{
					this.OnU_NameChanging(value);
					this.SendPropertyChanging();
					this._U_Name = value;
					this.SendPropertyChanged("U_Name");
					this.OnU_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Surname", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Surname
		{
			get
			{
				return this._Surname;
			}
			set
			{
				if ((this._Surname != value))
				{
					this.OnSurnameChanging(value);
					this.SendPropertyChanging();
					this._Surname = value;
					this.SendPropertyChanged("Surname");
					this.OnSurnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Type", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string User_Type
		{
			get
			{
				return this._User_Type;
			}
			set
			{
				if ((this._User_Type != value))
				{
					this.OnUser_TypeChanging(value);
					this.SendPropertyChanging();
					this._User_Type = value;
					this.SendPropertyChanged("User_Type");
					this.OnUser_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(16) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Item_tbl")]
	public partial class Item_tbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Item_ID;
		
		private string _I_Name;
		
		private string _I_Description;
		
		private string _I_UnitPrice;
		
		private EntityRef<Item_Assign> _Item_Assign;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItem_IDChanging(int value);
    partial void OnItem_IDChanged();
    partial void OnI_NameChanging(string value);
    partial void OnI_NameChanged();
    partial void OnI_DescriptionChanging(string value);
    partial void OnI_DescriptionChanged();
    partial void OnI_UnitPriceChanging(string value);
    partial void OnI_UnitPriceChanged();
    #endregion
		
		public Item_tbl()
		{
			this._Item_Assign = default(EntityRef<Item_Assign>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Item_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Item_ID
		{
			get
			{
				return this._Item_ID;
			}
			set
			{
				if ((this._Item_ID != value))
				{
					this.OnItem_IDChanging(value);
					this.SendPropertyChanging();
					this._Item_ID = value;
					this.SendPropertyChanged("Item_ID");
					this.OnItem_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_I_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string I_Name
		{
			get
			{
				return this._I_Name;
			}
			set
			{
				if ((this._I_Name != value))
				{
					this.OnI_NameChanging(value);
					this.SendPropertyChanging();
					this._I_Name = value;
					this.SendPropertyChanged("I_Name");
					this.OnI_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_I_Description", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string I_Description
		{
			get
			{
				return this._I_Description;
			}
			set
			{
				if ((this._I_Description != value))
				{
					this.OnI_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._I_Description = value;
					this.SendPropertyChanged("I_Description");
					this.OnI_DescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_I_UnitPrice", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string I_UnitPrice
		{
			get
			{
				return this._I_UnitPrice;
			}
			set
			{
				if ((this._I_UnitPrice != value))
				{
					this.OnI_UnitPriceChanging(value);
					this.SendPropertyChanging();
					this._I_UnitPrice = value;
					this.SendPropertyChanged("I_UnitPrice");
					this.OnI_UnitPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Item_tbl_Item_Assign", Storage="_Item_Assign", ThisKey="Item_ID", OtherKey="Item_ID", IsUnique=true, IsForeignKey=false)]
		public Item_Assign Item_Assign
		{
			get
			{
				return this._Item_Assign.Entity;
			}
			set
			{
				Item_Assign previousValue = this._Item_Assign.Entity;
				if (((previousValue != value) 
							|| (this._Item_Assign.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Item_Assign.Entity = null;
						previousValue.Item_tbl = null;
					}
					this._Item_Assign.Entity = value;
					if ((value != null))
					{
						value.Item_tbl = this;
					}
					this.SendPropertyChanged("Item_Assign");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Item_Assign")]
	public partial class Item_Assign : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Item_ID;
		
		private int _School_ID;
		
		private EntityRef<Item_tbl> _Item_tbl;
		
		private EntityRef<School_tbl> _School_tbl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItem_IDChanging(int value);
    partial void OnItem_IDChanged();
    partial void OnSchool_IDChanging(int value);
    partial void OnSchool_IDChanged();
    #endregion
		
		public Item_Assign()
		{
			this._Item_tbl = default(EntityRef<Item_tbl>);
			this._School_tbl = default(EntityRef<School_tbl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Item_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Item_ID
		{
			get
			{
				return this._Item_ID;
			}
			set
			{
				if ((this._Item_ID != value))
				{
					if (this._Item_tbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItem_IDChanging(value);
					this.SendPropertyChanging();
					this._Item_ID = value;
					this.SendPropertyChanged("Item_ID");
					this.OnItem_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_School_ID", DbType="Int NOT NULL")]
		public int School_ID
		{
			get
			{
				return this._School_ID;
			}
			set
			{
				if ((this._School_ID != value))
				{
					if (this._School_tbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchool_IDChanging(value);
					this.SendPropertyChanging();
					this._School_ID = value;
					this.SendPropertyChanged("School_ID");
					this.OnSchool_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Item_tbl_Item_Assign", Storage="_Item_tbl", ThisKey="Item_ID", OtherKey="Item_ID", IsForeignKey=true)]
		public Item_tbl Item_tbl
		{
			get
			{
				return this._Item_tbl.Entity;
			}
			set
			{
				Item_tbl previousValue = this._Item_tbl.Entity;
				if (((previousValue != value) 
							|| (this._Item_tbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Item_tbl.Entity = null;
						previousValue.Item_Assign = null;
					}
					this._Item_tbl.Entity = value;
					if ((value != null))
					{
						value.Item_Assign = this;
						this._Item_ID = value.Item_ID;
					}
					else
					{
						this._Item_ID = default(int);
					}
					this.SendPropertyChanged("Item_tbl");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_tbl_Item_Assign", Storage="_School_tbl", ThisKey="School_ID", OtherKey="School_ID", IsForeignKey=true)]
		public School_tbl School_tbl
		{
			get
			{
				return this._School_tbl.Entity;
			}
			set
			{
				School_tbl previousValue = this._School_tbl.Entity;
				if (((previousValue != value) 
							|| (this._School_tbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._School_tbl.Entity = null;
						previousValue.Item_Assigns.Remove(this);
					}
					this._School_tbl.Entity = value;
					if ((value != null))
					{
						value.Item_Assigns.Add(this);
						this._School_ID = value.School_ID;
					}
					else
					{
						this._School_ID = default(int);
					}
					this.SendPropertyChanged("School_tbl");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
